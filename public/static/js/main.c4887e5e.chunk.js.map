{"version":3,"sources":["types/types.js","reducers/calendarReducers.js","reducers/uiReducers.js","reducers/authreducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","auth/LoginScreen.js","helpers/calendar-messages.js","helpers/prepareEvents.js","actions/events.js","ui/NavBar.js","actions/ui.js","calendar/CalendarModal.js","ui/AddNewFab.js","ui/EventDelete.js","calendar/CalendarEvents.js","calendar/CalendarScreen.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRoutes.js","CalendarApp.js","index.js"],"names":["types","uiOpenModal","uiCloseModal","eventSetActive","starAddNewEvent","eventAddNew","eventClearActive","eventUpdate","eventDelete","eventStartLoding","eventLogout","authCheckingFinish","authLogin","authLogout","initialState","events","activeEvents","modalOpen","cheking","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","ui","state","action","type","calendar","payload","eventUpdated","map","e","id","filter","auth","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","a","token","localStorage","getItem","chekingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rname","rEmail","rPassword","rrPassword","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","prepareEvents","end","moment","toDate","start","eventDeleted","eventLoadded","NavBar","useSelector","onClick","clear","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowplus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","EventDelete","CalendarEvent","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","fontSize","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRoutes","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"4MAEaA,EAAO,CAGhBC,YAAc,kBACdC,aAAe,mBAEfC,eAAiB,qBACjBC,gBAAkB,6BAClBC,YAAa,mBACbC,iBAAmB,sBACnBC,YAAc,uBACdC,YAAc,uBACdC,iBAAkB,8BAClBC,YAAc,uBACdC,mBAAoB,oCACpBC,UAAW,eACXC,WAAY,iBCJVC,EAAc,CAChBC,OAAQ,GACRC,aAAe,MCdbF,EAAc,CAChBG,WAAY,GCDVH,EAAe,CAEjBI,SAAS,GCIPC,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAErGC,EAAWC,YACb,CAEIC,GFNkB,WAAmC,IAAlCC,EAAiC,uDAAzBZ,EAAca,EAAW,uCAGxD,OAAQA,EAAOC,MACX,KAAK5B,EAAMC,YACP,OAAO,2BACAyB,GADP,IAEIT,WAAW,IAGnB,KAAKjB,EAAME,aACP,OAAO,2BACAwB,GADP,IAEIT,WAAU,IAElB,QACE,OAAOS,IETTG,SHMwB,WAAiC,IAAhCH,EAA+B,uDAAxBZ,EAAaa,EAAW,uCAE5D,OAAQA,EAAOC,MACX,KAAK5B,EAAMG,eACP,OAAO,2BACAuB,GADP,IAEIV,aAAeW,EAAOG,UAGlC,KAAK9B,EAAMK,YACP,OAAO,2BACAqB,GADP,IAEIX,OAAM,sBACCW,EAAMX,QADP,CAEFY,EAAOG,YAGnB,KAAK9B,EAAMM,iBACP,OAAO,2BACAoB,GADP,IAEIV,aAAe,OAEvB,KAAKhB,EAAM+B,aACP,OAAO,2BACAL,GADP,IAEIX,OAASW,EAAMX,OAAOiB,KAClB,SAAAC,GAAC,OAAKA,EAAEC,KAAMP,EAAOG,QAAQI,GAAKP,EAAOG,QAAUG,OAG/D,KAAKjC,EAAMQ,YACP,OAAO,2BACAkB,GADP,IAEIX,OAASW,EAAMX,OAAOoB,QAClB,SAAAF,GAAC,OAAIA,EAAEC,KAAOR,EAAMV,aAAakB,MAErClB,aAAe,OAEvB,KAAKhB,EAAMS,iBACP,kCACOiB,GADP,IAEIX,OAAM,YAAOY,EAAOG,WAE5B,KAAK9B,EAAMU,YACP,sBACOI,GAEP,QACG,OAAOY,IGpDVU,KDNkB,WAAgC,IAA/BV,EAA8B,uDAAvBZ,EAAaa,EAAU,uCAErD,OAAQA,EAAOC,MACZ,KAAK5B,EAAMY,UACP,OAAO,uCACAc,GACAC,EAAOG,SAFd,IAGIZ,SAAQ,IAEf,KAAKlB,EAAMW,mBACP,OAAO,2BACAe,GADP,IAEIR,SAAQ,IAEhB,KAAKlB,EAAMa,WACP,MAAO,CACHK,SAAQ,GAGhB,QACG,OAAOQ,MCTLW,EAAQC,YACjBf,EACAJ,EACIoB,YAAgBC,O,gDCvBlBC,EAAUC,iDAEHC,EAAgB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAE9CC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAgB,QAAXE,EACME,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAKrBQ,EAAa,uCAAG,WAAQT,EAAUC,GAAlB,+BAAAS,EAAA,yDAAwBR,EAAxB,+BAAiC,MAEpDC,EAFmB,UAETN,EAFS,YAEIG,GACvBW,EAAQC,aAAaC,QAAQ,UAAY,GAE/B,QAAXX,EALoB,yCAMdE,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWM,MATE,gCAadP,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWM,GAEfL,KAAMC,KAAKC,UAAWP,MAnBL,2CAAH,wD,iBC4DpBa,EAAe,iBAAM,CACvB9B,KAAM5B,EAAMW,qBAGVgD,EAAQ,SAACC,GAAD,MAAU,CACpBhC,KAAM5B,EAAMY,UACZkB,QAAS8B,IAEPC,EAAS,iBAAM,CACjBjC,KAAM5B,EAAMa,a,gBCrFHiD,EAAU,WAA0B,IAAxBhD,EAAuB,uDAAR,GAAQ,EAEhBiD,mBAASjD,GAFO,mBAErCkD,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAWnD,IAITqD,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,eCb3BK,EAAc,WAEzB,IAAMC,EAAWC,cAFc,EAIoBX,EAAS,CAC1DY,OAAO,mBACPC,UAAW,WANkB,mBAIvBC,EAJuB,KAINC,EAJM,KAUvBH,EAAoBE,EAApBF,OAAQC,EAAYC,EAAZD,UAVe,EAY0Bb,EAAS,CAChEgB,MAAM,SACNC,OAAO,sBACPC,UAAW,SACXC,WAAY,WAhBiB,mBAYvBC,EAZuB,KAYHC,EAZG,KAmBvBL,EAAqCI,EAArCJ,MAAMC,EAA+BG,EAA/BH,OAAQC,EAAuBE,EAAvBF,UAAUC,EAAaC,EAAbD,WAiBhC,OACE,qBAAKG,UAAU,4BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,yCACA,uBAAMC,SApBY,SAACpD,GFxBH,IAAEqD,EAAOC,EEyB7BtD,EAAEuD,iBACFhB,GF1BsBc,EE0BFZ,EF1BSa,EE0BDZ,EFzB9B,uCAAO,WAAOH,GAAP,iBAAAlB,EAAA,sEAEgBX,EAAe,OAAQ,CAAE2C,QAAOC,YAAY,QAF5D,cAEGE,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGxC,EAHH,QAKMyC,IACLnC,aAAaoC,QAAQ,QAAS1C,EAAKK,OACnCC,aAAaoC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDtB,EAAUb,EAAM,CACZoC,IAAK7C,EAAK6C,IACV1B,KAAMnB,EAAKmB,SAGf2B,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SAd9B,2CAAP,yDE2CM,UACE,qBAAKd,UAAU,cAAf,SACE,uBACExD,KAAK,OACLwD,UAAU,eACVe,YAAY,SACZ9B,KAAK,SACLC,MAAOI,EACP0B,SAAUvB,MAGd,qBAAKO,UAAU,kBAAf,SACE,uBACExD,KAAK,WACLwD,UAAU,eACVe,YAAY,gBACZ9B,KAAK,YACLC,MAAOK,EACPyB,SAAUvB,MAGd,qBAAKO,UAAU,kBAAf,SACE,uBAAOxD,KAAK,SAASwD,UAAU,YAAYd,MAAM,kBAKvD,sBAAKc,UAAU,wBAAf,UACE,0CACA,uBAAMC,SA5CgB,SAACpD,GAG3B,GAFAA,EAAEuD,iBAECR,IAAaC,EACd,OAAOe,IAAKC,KAAK,QAAQ,kCAA+B,SFV/B,IAAE5B,EAAMiB,EAAOC,EEa1Cf,GFb6BH,EEaFS,EFbQQ,EEaFP,EFbSQ,EEaDP,EFZ3C,uCAAO,WAAOR,GAAP,iBAAAlB,EAAA,sEACgBX,EAAe,WAAY,CAAE0B,OAAKiB,QAAOC,YAAY,QADrE,cACGE,EADH,gBAEgBA,EAAKC,OAFrB,QAEGxC,EAFH,QAIMyC,IACLnC,aAAaoC,QAAQ,QAAQ1C,EAAKK,OAClCC,aAAaoC,QAAQ,mBAAkB,IAAIC,MAAOC,WAElDtB,EAAUb,EAAM,CACZoC,IAAK7C,EAAK6C,IACV1B,KAAMnB,EAAKmB,KACXd,MAAOL,EAAKK,UAIhByC,IAAKC,KAAK,QAAQ/C,EAAKgD,IAAI,SAf5B,2CAAP,yDEiDM,UACE,qBAAKd,UAAU,aAAf,SACE,uBACExD,KAAK,OACLwD,UAAU,eACVe,YAAY,SACZ9B,KAAK,QACLC,MAAOQ,EACPsB,SAAUjB,MAGd,qBAAKC,UAAU,kBAAf,SACE,uBACExD,KAAK,QACLwD,UAAU,eACVe,YAAY,SACZ9B,KAAK,SACLC,MAAOS,EACPqB,SAAUjB,MAGd,qBAAKC,UAAU,kBAAf,SACE,uBACExD,KAAK,WACLwD,UAAU,eACVe,YAAY,gBACZ9B,KAAK,YACLC,MAAOU,EACPoB,SAAUjB,MAId,qBAAKC,UAAU,kBAAf,SACE,uBACExD,KAAK,WACLwD,UAAU,eACVe,YAAY,0BACZ9B,KAAK,aACLC,MAAOW,EACPmB,SAAUjB,MAId,qBAAKC,UAAU,kBAAf,SACE,uBAAOxD,KAAK,SAASwD,UAAU,YAAYd,MAAM,+B,QC1HlD+B,EAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCVNC,EAAgB,WAAoB,IAAlBrG,EAAiB,uDAAR,GAEpC,OAAOA,EAAOiB,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEIoF,IAAKC,IAAQrF,EAAEoF,KAAME,SACrBC,MAAOF,IAAQrF,EAAEuF,OAAQD,eC2B/BlH,EAAc,SAAC2G,GAAD,MAAY,CAC5BpF,KAAM5B,EAAMK,YACZyB,QAASkF,IAUA1G,EAAmB,iBAAM,CAACsB,KAAK5B,EAAMM,mBAuB5CyB,EAAe,SAAEiF,GAAF,MAAc,CAC/BpF,KAAM5B,EAAM+B,aACZD,QAASkF,IAyBPS,EAAc,iBAAM,CACtB7F,KAAK5B,EAAMQ,cAuBTkH,EAAc,SAAC3G,GAAD,MAAY,CAC5Ba,KAAK5B,EAAMS,iBACXqB,QAAUf,ICpHD4G,EAAS,WAAO,IACpBtD,EAAQuD,aAAa,SAAAlG,GAAK,OAAIA,EAAMU,QAApCiC,KACDG,EAAWC,cAQf,OACE,qBAAKW,UAAU,+BAAf,SACA,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAb,SAA6Bf,IAC7B,qBAAKe,UAAU,SAAf,SACE,yBAAQA,UAAU,0BAA2ByC,QAV9B,SAAC5F,GACpBuC,GN0DK,SAACA,GACJhB,aAAasE,QACbtD,EAASX,QM3DXW,EDiH0B,CAC5B5C,KAAK5B,EAAMU,eC1GL,UACA,mBAAG0E,UAAU,6BADb,oB,kCCpBGnF,EAAc,iBAAM,CAAE2B,KAAK5B,EAAMC,cCOxC8H,EAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,IAAMC,gBAEN,IAAMC,EAAMnB,MAASoB,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAC3CC,GAAWJ,EAAIK,QAAQF,IAAI,EAAG,SAE9BG,GAAY,CAChBC,MAAO,GACPC,MAAO,GACPzB,MAAOiB,EAAIlB,SACXF,IAAKwB,GAAStB,UAGH2B,GAAgB,WAAO,IAAD,EAEGnF,mBAAS0E,EAAIlB,UAFhB,mBAExB4B,EAFwB,KAEbC,EAFa,OAGDrF,mBAAS8E,GAAStB,UAHjB,mBAGxB8B,EAHwB,KAGfC,EAHe,OAIKvF,oBAAS,GAJd,mBAIxBwF,EAJwB,KAIZC,EAJY,KAMzBhF,EAAWC,cAEVxD,EAAa2G,aAAa,SAAAlG,GAAK,OAAIA,EAAMD,MAAzCR,UACAD,EAAgB4G,aAAa,SAAAlG,GAAK,OAAIA,EAAMG,YAA5Cb,aATwB,EAWK+C,mBAASgF,IAXd,mBAWxBU,EAXwB,KAWZC,EAXY,KAaxBV,EAA0BS,EAA1BT,MAAOC,EAAmBQ,EAAnBR,MAAMzB,EAAaiC,EAAbjC,MAAMH,EAAOoC,EAAPpC,IAG1BsC,qBAAU,WAEND,EADC1I,GAGa+H,MAGf,CAAC/H,EAAa0I,IAEjB,IAAMvF,EAAoB,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACxBsF,EAAc,2BACPD,GADM,kBAERrF,EAAOC,KAAOD,EAAOE,UAI1BsF,EAAa,WACjBpF,ED9D8B,CAAE5C,KAAK5B,EAAME,eC+D3CsE,EAAWlE,KACXoJ,EAAcX,KAoDhB,OAEE,eAAC,IAAD,CACEc,OAAQ5I,EACR6I,eAAgBF,EAChBG,MAAOhC,EACP3C,UAAU,QACV4E,eAAgB,IAChBC,iBAAiB,cACjBC,aAAa,EAPf,UAUE,qBAAI9E,UAAU,cAAd,cAA+BpE,EAAe,SAAU,QAAxD,OACA,uBACA,uBAAMoE,UAAU,YAAYC,SA/CX,SAACpD,GAClBA,EAAEuD,iBACF,IHvC4BwB,EGuCtBmD,EAAc7C,IAAOE,GACrB4C,EAAY9C,IAAOD,GAGzB,OAAG8C,EAAYE,cAAcD,GAEpBpE,IAAKC,KAAK,QAAQ,gDAAgD,SAExE+C,EAAMsB,OAAOC,OAAO,EAEZf,GAAc,IAGrBxI,EAEFwD,GHtD0BwC,EGsDAyC,EHrD9B,uCAAO,WAAMjF,GAAN,iBAAAlB,EAAA,+EAGoBD,EAAc,UAAD,OAAY2D,EAAM9E,IAAO8E,EAAO,OAHjE,cAGOvB,EAHP,gBAIoBA,EAAKC,OAJzB,QAIOxC,EAJP,QAMWyC,GACNnB,EAAUzC,EAAciF,IAExBhB,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SATlC,kDAcCsE,QAAQC,IAAR,MAdD,0DAAP,yDG0DIjG,EHtGwB,SAAEwC,GAC9B,8CAAO,WAAOxC,EAAUkG,GAAjB,uBAAApH,EAAA,+DAEmBoH,IAAWtI,KAAzB2D,EAFL,EAEKA,IAAK1B,EAFV,EAEUA,KAFV,kBAKoBhB,EAAc,SAAU2D,EAAO,QALnD,cAKOvB,EALP,gBAMoBA,EAAKC,OANzB,OAMOxC,EANP,OAQCsH,QAAQC,IAAIvH,GAEPA,EAAKyC,KACNqB,EAAM9E,GAAKgB,EAAKyH,OAAOzI,GACvB8E,EAAMpD,KAAO,CACTgH,IAAK7E,EACL1B,KAAMA,GAEVmG,QAAQC,IAAKzD,GACbxC,EAAUnE,EAAa2G,KAjB5B,kDAsBCwD,QAAQC,IAAR,MAtBD,0DAAP,wDGqGaI,CAAiBpB,IAC1Be,QAAQC,IAAIhB,IAKdD,GAAc,QACdI,MAkBA,UACE,sBAAKxE,UAAU,aAAf,UACE,wDACA,cAAC,IAAD,CACGgB,SAnEM,SAACnE,GAChBmH,EAAanH,GACbyH,EAAc,2BACPD,GADM,IAETjC,MAAMvF,MAgEDqC,MAAO6E,EACP/D,UAAU,oBAIf,sBAAKA,UAAU,aAAf,UACE,qDACA,cAAC,IAAD,CACGgB,SApEI,SAACnE,GACdqH,EAAWrH,GACXyH,EAAc,2BACPD,GADM,IAETpC,IAAIpF,MAiECqC,MAAO+E,EACPjE,UAAU,eACV0F,QAAS3B,OAId,uBACA,sBAAK/D,UAAU,aAAf,UACE,mDACA,uBACExD,KAAK,OACLwD,UAAS,wBAAoBmE,GAAc,cAC3CpD,YAAY,uBACZ9B,KAAK,QACL0G,aAAa,MACbzG,MAAO0E,EACP5C,SAAUjC,IAEZ,uBAAOjC,GAAG,YAAYkD,UAAU,uBAAhC,yCAKF,qBAAKA,UAAU,aAAf,SACE,0BACExD,KAAK,OACLwD,UAAU,eACVe,YAAY,QACZ6E,KAAK,IACL3G,KAAK,QACLC,MAAO2E,EACP7C,SAAUjC,MAId,yBAAQvC,KAAK,SAASwD,UAAU,yCAAhC,UACE,mBAAGA,UAAU,gBACb,sDCrLG6F,I,cAAY,WAErB,IAAMzG,EAAWC,cAOjB,OACI,wBACIW,UAAU,sBACVyC,QARe,WACnBrD,EAAUvE,MAKV,SAII,mBAAGmF,UAAU,oBCdZ8F,GAAc,WAEvB,IAAM1G,EAAWC,cAMjB,OACI,wBACAW,UAAU,4BACVyC,QARe,WAEfrD,ELoEJ,uCAAO,WAAQA,EAAUkG,GAAlB,mBAAApH,EAAA,6DAEKpB,EAAOwI,IAAW7I,SAASb,aAA3BkB,GAFL,kBAIoBmB,EAAc,UAAD,OAAYnB,GAAO,GAAI,UAJxD,cAIOuD,EAJP,gBAKoBA,EAAKC,OALzB,QAKOxC,EALP,QAOWyC,GACNnB,EAAUiD,KAEVzB,IAAKC,KAAK,QAAS/C,EAAKgD,IAAK,SAVlC,kDAeCsE,QAAQC,IAAR,MAfD,0DAAP,0DKhEI,SAII,mBAAGrF,UAAU,oBCfZ+F,GAAgB,SAAC,GAAe,IAAbnE,EAAY,EAAZA,MAEpBgC,EAAgBhC,EAAhBgC,MAAOpF,EAASoD,EAATpD,KAEf,OACI,gCACI,uCAAWoF,EAAX,OACA,sCAAUpF,EAAKS,KAAf,WCaZiD,IAAO8D,OAAO,MAEd,IAAMC,GAAYC,YAAgBhE,KAGrBiE,GAAiB,WAAO,IAAD,EAEF3D,aAAa,SAAAlG,GAAK,OAAIA,EAAMG,YAAnDd,EAFyB,EAEzBA,OAAOC,EAFkB,EAElBA,aACN+E,EAAQ6B,aAAa,SAAAlG,GAAK,OAAIA,EAAMU,QAApC2D,IAHwB,EAKAhC,mBAASP,aAAaC,QAAQ,aAAc,SAL5C,mBAKzB+H,EALyB,KAKfC,EALe,KAO1BjH,EAAWC,cAEjBkF,qBAAU,WACNnF,EPmEJ,uCAAO,WAAMA,GAAN,mBAAAlB,EAAA,+EAIoBD,EAAe,UAJnC,cAIOoC,EAJP,gBAKoBA,EAAKC,OALzB,OAKOxC,EALP,OAOOnC,EAASqG,EAAelE,EAAKwI,SACnClH,EAAUkD,EAAc3G,IARzB,kDAWCyJ,QAAQC,IAAR,MAXD,0DAAP,yDOlEI,CAACjG,IAiCL,OACI,gCACA,cAAC,EAAD,IAEC,cAAC,IAAD,CACG6G,UAAWA,GACXtK,OAAQA,EACR4K,cAAc,QACdC,YAAY,MACZ7B,MAAO,CAAE8B,OAAQ,KACjBxF,SAAWA,EACXyF,gBAzBgB,SAAC9E,EAAMQ,EAAMH,EAAI0E,GAUrC,MAAO,CACHhC,MATM,CACViC,gBAAmBjG,IAAQiB,EAAMpD,KAAKgH,IAAQ,UAAY,UAC1DqB,SAAU,GACVC,aAAa,MACbC,QAAS,GACTC,QAAS,QACTC,MAAO,WAkBHC,mBA3Ca,SAACrK,GAClBuC,EAASvE,MA2CLsM,cAzCa,SAACtK,GAClBuC,EPHiC,CAErC5C,KAAK5B,EAAMG,eACX2B,QOA4BG,KAyCpBuK,OAvCY,SAACvK,GACjBwJ,EAAYxJ,GACZuB,aAAaoC,QAAQ,WAAW3D,IAsC5BwK,aApCY,SAACxK,GACjBuC,EAASlE,MAoCLoM,YAAa,EACbC,KAAMnB,EACNoB,WAAa,CACT5F,MAAOmE,MAKX,cAAC,GAAD,IAGKnK,GAAgB,cAAC,GAAD,IAGzB,cAAC,GAAD,Q,SC/FK6L,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,cAACC,EAAD,eAAgBG,IAChB,cAAC,IAAD,CAAUC,GAAG,gBCXxBC,GAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAgBG,SCF3BG,GAAY,WAEvB,IAAM7I,EAAWC,cAFY,EAINmD,aAAa,SAAAlG,GAAK,OAAIA,EAAMU,QAAnC2D,GAJa,EAItB7E,QAJsB,EAIb6E,KAUd,OARF4D,qBAAU,WACRnF,Ef8BA,uCAAO,WAAMA,GAAN,iBAAAlB,EAAA,sEAEgBD,EAAe,cAF/B,cAEGoC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGxC,EAHH,QAKMyC,IACLnC,aAAaoC,QAAQ,QAAS1C,EAAKK,OACnCC,aAAaoC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDtB,EAAUb,EAAM,CACZoC,IAAK7C,EAAK6C,IACV1B,KAAMnB,EAAKmB,SAGfG,EAAUd,KAdX,2CAAP,yDe5BC,CAACc,IAOF,cAAC,IAAD,UAEE,8BACE,eAAC,IAAD,WAEA,cAAC,GAAD,CAAa8I,OAAK,EAACC,KAAK,SAASP,UAAWzI,EAAauI,kBAAmB/G,IAC5E,cAAC,GAAD,CAAcuH,OAAK,EAACC,KAAK,IAAKP,UAAWzB,GAAgBuB,kBAAmB/G,IAE1E,cAAC,IAAD,CAAUoH,GAAG,cCjCVK,GAAc,WACvB,OACI,cAAC,IAAD,CAAUnL,MAAOA,EAAjB,SACK,cAAC,GAAD,OCLboL,IAASC,OAEL,cAAC,GAAD,IAAgBC,SAASC,eAAe,U","file":"static/js/main.c4887e5e.chunk.js","sourcesContent":["\r\n\r\nexport const types ={\r\n\r\n    \r\n    uiOpenModal : '[ui] open Modal',\r\n    uiCloseModal : '[ui] close Modal',\r\n\r\n    eventSetActive : '[event] set active',\r\n    starAddNewEvent : '[event] Star add new event',\r\n    eventAddNew: '[event] add new ',\r\n    eventClearActive : '[event] clear event',\r\n    eventUpdate : '[event] event update',\r\n    eventDelete : '[event] event delete',\r\n    eventStartLoding: '[event] start event loading',\r\n    eventLogout : '[event] event logout',\r\n    authCheckingFinish: '[auth] Finish cheking login state',\r\n    authLogin: '[auth] login',\r\n    authLogout: '[auth] Logout'\r\n}\r\n\r\n\r\n","import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\n// { asi inicia el evento pero se remplazara por lo guardado \r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños de felipe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor:'#fafafa',\r\n//     user :{\r\n//         id: '123',\r\n//         name: 'Felipe'\r\n//     }\r\n// }\r\nconst initialState= {\r\n    events: [],\r\n    activeEvents : null\r\n}\r\n\r\n\r\nexport const calendarReducers = (state= initialState,action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvents : action.payload\r\n            }\r\n            \r\n    case types.eventAddNew:\r\n        return {\r\n            ...state,\r\n            events :[\r\n                ...state.events,\r\n                action.payload\r\n            ]\r\n        }\r\n    case types.eventClearActive:\r\n        return {\r\n            ...state,\r\n            activeEvents : null,\r\n        }\r\n    case types.eventUpdated:\r\n        return {\r\n            ...state,\r\n            events : state.events.map(\r\n                e=> ( e.id=== action.payload.id)? action.payload : e\r\n            )\r\n        }\r\n    case types.eventDelete:\r\n        return {\r\n            ...state,\r\n            events : state.events.filter(\r\n                e=> (e.id !== state.activeEvents.id) \r\n            ),\r\n            activeEvents : null\r\n        }\r\n    case types.eventStartLoding:\r\n        return{\r\n            ...state,\r\n            events : [...action.payload]\r\n        }\r\n    case types.eventLogout:\r\n        return{\r\n            ...initialState\r\n        }\r\n        default:\r\n           return state\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState ={\r\n    modalOpen : false,\r\n}\r\n\r\n\r\nexport const uiReducers = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n                \r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n        default:\r\n          return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n\r\n    cheking: true\r\n\r\n}\r\n\r\n\r\nexport const authReducer= (state= initialState,action)=> {\r\n\r\n    switch (action.type) {\r\n       case types.authLogin:\r\n           return {\r\n               ...state,\r\n               ...action.payload,\r\n               cheking:false\r\n           }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                cheking:false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                cheking:false\r\n            }\r\n        \r\n        default:\r\n           return state;\r\n    }\r\n\r\n}","import {createStore,combineReducers, applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { calendarReducers } from '../reducers/calendarReducers';\r\nimport { uiReducers } from '../reducers/uiReducers';\r\nimport { authReducer } from '../reducers/authreducer';\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers(\r\n    {\r\n      \r\n        ui: uiReducers,\r\n        calendar : calendarReducers,\r\n        auth: authReducer\r\n      \r\n    }\r\n);\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers ( \r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchConToken = async ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\r\nimport react from 'react'\r\nimport {types} from '../types/types';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\nexport const authStartRegister = ( name ,email, password) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken( 'auth/new', { name,email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token init-date',new Date().getTime());\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                token: body.token\r\n                 })\r\n            );\r\n        }else {\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n        \r\n       \r\n    }\r\n}\r\n\r\nexport const startCkeking = ()=> { \r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( chekingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nexport const authLogout =()=> {\r\n    return (dispatch) =>{\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n\r\n    }\r\n}\r\n\r\nconst chekingFinish =()=> ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user)=> ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\nconst logout = ()=> ({\r\n    type: types.authLogout,\r\n})\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { authStartRegister, startLogin } from \"../actions/auth\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport \"../styles/login.css\";\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ formLoginValues, handleLoginInputChange] = useForm( {\r\n    lEmail:'duvan@hotmail.es',\r\n    lPassword: '123456'\r\n\r\n  });\r\n\r\n  const  {lEmail, lPassword} =formLoginValues;\r\n\r\n  const [ formRegisterValues, handleRegisterInputChange] = useForm( {\r\n    rname:'Felipe',\r\n    rEmail:'Felipeli@hotmail.es',\r\n    rPassword: '123456',\r\n    rrPassword: '123456'\r\n  });\r\n\r\n  const  {rname,rEmail, rPassword,rrPassword} =formRegisterValues;\r\n\r\n   const handleLoginSubmit= (e) => {\r\n      e.preventDefault();\r\n      dispatch(startLogin(lEmail, lPassword));\r\n  }\r\n\r\n    const handleRegisterSubmit= (e) => {\r\n      e.preventDefault();\r\n\r\n      if(rPassword!== rrPassword){\r\n        return Swal.fire('Error','Las Contraseñas no coinciden','error')\r\n      }\r\n\r\n      dispatch(authStartRegister(rname,rEmail, rPassword));\r\n    }\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLoginSubmit}>\r\n            <div className=\"form-group \">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group mt-1\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group mt-1\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegisterSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name='rname'\r\n                value={rname}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group mt-1\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name='rEmail'\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group mt-1\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name='rPassword'\r\n                value={rPassword}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-1\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name='rrPassword'\r\n                value={rrPassword}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group mt-1\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body)\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( event );\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event)=> ({\r\n    \r\n    type:types.eventSetActive,\r\n    payload:event\r\n\r\n});\r\n\r\nexport const eventClearActive = ()=> ({type:types.eventClearActive});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = (  ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvents;\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted= ()=> ({ \r\n    type:types.eventDelete,\r\n    \r\n});\r\n\r\nexport const eventStartLoading= ()=> {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoadded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventLoadded= (events)=> ({\r\n    type:types.eventStartLoding,\r\n    payload : events\r\n\r\n})\r\n\r\nexport const eventLogout =()=> ({\r\n    type:types.eventLogout\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authLogout } from '../actions/auth';\r\nimport { eventLogout } from '../actions/events';\r\n\r\n\r\n\r\nexport const NavBar = () => {\r\n  const {name} = useSelector( state => state.auth );\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n    const handleLogout = (e)=> {\r\n      dispatch(authLogout());\r\n      dispatch(eventLogout());\r\n\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\">{name}</a>\r\n        <div className=\"d-flex\" >\r\n          <button className=\"btn btn-outline-danger \"  onClick={handleLogout}>\r\n          <i className=\"fas fa-sign-out-alt me-2\" ></i>\r\n            logout\r\n            </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = ()=> ({ type:types.uiOpenModal });\r\nexport const uiCloseModal = ()=> ({ type:types.uiCloseModal });\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/login.css\";\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiCloseModal } from \"../actions/ui\";\r\nimport {  eventClearActive, eventStartAddNew, eventStartUpdate } from \"../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement();\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowplus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowplus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowplus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector( state => state.ui );\r\n    const {activeEvents} = useSelector( state => state.calendar );\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes,start,end} = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n      if(activeEvents){\r\n        setFormValues(activeEvents);\r\n      }else {\r\n        setFormValues(initEvent)\r\n      }\r\n    \r\n    }, [activeEvents,setFormValues])\r\n\r\n    const handleInputChange = ({target})=> {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n  const closeModal = ()=> {\r\n    dispatch(uiCloseModal());\r\n    dispatch ( eventClearActive());\r\n    setFormValues(initEvent);\r\n  }\r\n\r\n  const startDate =(e)=> {\r\n    setDateStart(e)\r\n    setFormValues({\r\n        ...formValues,\r\n        start:e\r\n    })\r\n  }\r\n  \r\n  const endDate =(e)=> {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n        ...formValues,\r\n        end:e\r\n    })\r\n  }\r\n \r\n  const handleSubmit = (e)=> {\r\n      e.preventDefault();\r\n      const momentStart = moment(start);\r\n      const momentEnd = moment(end);\r\n\r\n    \r\n      if(momentStart.isSameOrAfter(momentEnd))\r\n      {\r\n        return Swal.fire('Error','La fecha inicio debe ser mayor a la fecha fin','error');\r\n      }\r\n      if(title.trim().length<2)\r\n      {\r\n          return setTitleValid(false);\r\n      }\r\n\r\n      if (activeEvents){\r\n\r\n        dispatch(eventStartUpdate(formValues))\r\n\r\n       \r\n      }\r\n      else {\r\n        dispatch(eventStartAddNew(formValues))\r\n        console.log(formValues)\r\n        \r\n      }\r\n\r\n      \r\n      setTitleValid(true);\r\n      closeModal();\r\n  }\r\n\r\n\r\n  return (\r\n   \r\n    <Modal\r\n      isOpen={modalOpen}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      className=\"modal\"\r\n      closeTimeoutMS={400}\r\n      overlayClassName=\"modal-fondo\"\r\n      ariaHideApp={false}\r\n    >\r\n   \r\n      <h3 className=\"text-center\"> {(activeEvents)? 'Editar': 'Crear'} </h3>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n             onChange={startDate}\r\n             value={dateStart}\r\n             className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n             onChange={endDate}\r\n             value={dateEnd}\r\n             className=\"form-control\"\r\n             minDate={dateStart}\r\n          />\r\n          \r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"3\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block mt-2\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {  eventStartDelete } from '../actions/events';\r\n\r\nexport const EventDelete = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const handeDelete =()=> {\r\n        \r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-danger fab-danger'\r\n        onClick = { handeDelete}\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { messages } from '../helpers/calendar-messages';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\n\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { EventDelete } from '../ui/EventDelete';\r\nimport { CalendarEvent } from './CalendarEvents';\r\n\r\n\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const {events,activeEvents} = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n   \r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView')|| 'month');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n     }, [dispatch])\r\n\r\n    const onDoubleClick =(e)=> {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    const onSelectEvent =(e)=> {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n    const onViewChange =(e)=> {\r\n        setlastView(e)\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n    const onSelectSlot =(e)=> {\r\n        dispatch(eventClearActive(e));\r\n    }\r\n\r\n   \r\n    \r\n    \r\n    const eventStyleGetter =(event,start,end,isSelected) => {\r\n    \r\n    const style = {\r\n        backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n        fontSize: 13,\r\n        borderRadius:'0px',\r\n        opacity: 0.8,\r\n        display: 'block',\r\n        color: 'white'\r\n    }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <NavBar/>\r\n\r\n         <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: 500 }}\r\n            messages= {messages}\r\n            eventPropGetter={eventStyleGetter}\r\n            onDoubleClickEvent={onDoubleClick}\r\n            onSelectEvent={onSelectEvent}\r\n            onView={onViewChange}\r\n            onSelectSlot ={onSelectSlot}\r\n            selectable= {true}\r\n            view={lastView}\r\n            components= {{ \r\n                event: CalendarEvent\r\n            }}\r\n        />\r\n\r\n           \r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvents)&& <EventDelete /> \r\n            }\r\n            \r\n        <CalendarModal />\r\n\r\n        \r\n    </div> \r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n } from \"react-router-dom\";\r\nimport { startCkeking } from '../actions/auth';\r\n \r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRoutes = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {cheking, uid} = useSelector( state => state.auth );\r\n\r\n  useEffect(() => {\r\n    dispatch(startCkeking());\r\n\r\n  }, [dispatch])\r\n\r\n  \r\n   \r\n \r\n    return (\r\n      \r\n    <Router>\r\n\r\n      <div>\r\n        <Switch>\r\n          \r\n        <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} /> \r\n        <PrivateRoute exact path=\"/\"  component={CalendarScreen} isAuthenticated={!!uid}/>\r\n\r\n          <Redirect to='/'/>\r\n        </Switch>\r\n        </div>\r\n      \r\n    </Router>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux'\r\nimport { AppRoutes } from './routes/AppRoutes';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n             <AppRoutes />\r\n        </Provider>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CalendarApp} from './CalendarApp';\r\n\r\nReactDOM.render(\r\n\r\n    <CalendarApp />,document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}